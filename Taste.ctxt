#BlueJ class context
comment0.params=
comment0.target=Taste()
comment0.text=\r\n\ Konstruktor\ f\uFFFDr\ Hauptfenster\r\n
comment1.params=neuerText\ neueBreite\ neueHoehe
comment1.target=Taste(java.lang.String,\ int,\ int)
comment1.text=\r\n\ Konstruktor\ f\uFFFDr\ Hauptfenster\r\n\ \r\n\ @param\ neueBreite\r\n\ @param\ neueHoehe\r\n
comment10.params=neueFontgroesse
comment10.target=void\ setzeSchriftgroesse(int)
comment11.params=neueFarbe
comment11.target=void\ setzeSchriftfarbe(java.lang.String)
comment11.text=\r\n\ g\uFFFDltige\ Farben\:\ "rot",\ "gelb",\ "blau",\ "gruen",\ "lila"\ ,\ "schwarz"\ ,\r\n\ "weiss"\ ,\ "grau","pink","magenta","orange","cyan","hellgrau"\r\n
comment12.params=neueFarbe
comment12.target=void\ setzeHintergrundfarbe(java.lang.String)
comment12.text=\r\n\ g\uFFFDltige\ Farben\:\ "rot",\ "gelb",\ "blau",\ "gruen",\ "lila"\ ,\ "schwarz"\ ,\r\n\ "weiss"\ ,\ "grau","pink","magenta","orange","cyan","hellgrau"\r\n
comment13.params=neueBreite\ neueHoehe
comment13.target=void\ setzeGroesse(int,\ int)
comment14.params=neuesX\ neuesY
comment14.target=void\ setzePosition(int,\ int)
comment14.text=\r\n\ neue\ Position\r\n\ \r\n\ @param\ x\r\n\ @param\ y\r\n
comment15.params=dx\ dy
comment15.target=void\ verschieben(int,\ int)
comment16.params=neuesX\ neuesY\ neueBreite\ neueHoehe
comment16.target=void\ setzeDimensionen(int,\ int,\ int,\ int)
comment16.text=\r\n\ \r\n\ @param\ neuesX\r\n\ @param\ neuesY\r\n\ @param\ neueBreite\r\n\ @param\ neueHoehe\r\n
comment17.params=
comment17.target=boolean\ wurdeGedrueckt()
comment17.text=\r\n\ Status\ der\ Komponente\ abrufen\ und\ r\uFFFDcksetzen\r\n
comment18.params=
comment18.target=void\ ruecksetzenGedrueckt()
comment19.params=
comment19.target=void\ warteBisGedrueckt()
comment2.params=neuerText\ neuesX\ neuesY\ neueBreite\ neueHoehe
comment2.target=Taste(java.lang.String,\ int,\ int,\ int,\ int)
comment2.text=\r\n\ Konstruktor\ f\uFFFDr\ Hauptfenster\r\n\ \r\n\ @param\ neuerText\r\n\ @param\ neuesX\r\n\ @param\ neuesY\r\n\ @param\ neueBreite\r\n\ @param\ neueHoehe\r\n
comment3.params=behaelter
comment3.target=Taste(IContainer)
comment3.text=\r\n\ Konstruktor\r\n\ \r\n\ @param\ behaelter\r\n
comment4.params=behaelter\ neuerText\ neuesX\ neuesY\ neueBreite\ neueHoehe
comment4.target=Taste(IContainer,\ java.lang.String,\ int,\ int,\ int,\ int)
comment4.text=\r\n\ Konstruktor\r\n\ \r\n\ @param\ behaelter\r\n\ @param\ neuerText\r\n\ @param\ neueBreite\r\n\ @param\ neueHoehe\r\n
comment5.params=
comment5.target=BasisComponente\ getBasisComponente()
comment5.text=\r\n\ \ Das\ Interface\ IComponente\ fordert\ eine\ Methode\ die\ eine\ BasisComponente\ zur\uFFFDckliefert.\r\n\ \ Sie\ wird\ ben\uFFFDtigt,\ um\ ein\ Objekt\ zu\ einem\ anderen\ Beh\uFFFDlter\ hinzuzuf\uFFFDgen\r\n
comment6.params=ID
comment6.target=void\ setzeID(int)
comment6.text=\r\n\ Eine\ Komponente\ mit\ Signalisierung\ muss\ eine\ eindeutige\ ID\ haben\r\n\ @param\ ID\r\n
comment7.params=linkObj
comment7.target=void\ setzeLink(ITuWas)
comment7.text=\r\n\ Eine\ Komponente\ mit\ Signalisierung\ braucht\ eine\ Objekt,\ dem\ es\ signalisieren\ kann\r\n\ @param\ linkObj\r\n
comment8.params=linkObj\ ID
comment8.target=void\ setzeLink(ITuWas,\ int)
comment8.text=\r\n\ Callback-Funktion\ wird\ aufgerufen,\ wenn\ die\ Taste\ gedr\uFFFDckt\ wird\r\n\ \r\n\ @param\ linkObj\r\n\ \r\n\ @param\ ID\r\n\ \ \ \ \ \ \ \ \ \ \ \ Parameter,\ der\ als\ ID\ an\ die\ Callback-Funktion\ \uFFFDbergeben\ wird.\r\n\ \ \ \ \ \ \ \ \ \ \ \ In\ der\ Callbackfunktion\ kann\ dann\ durch\ die\ ID\ das\ aufrufende\r\n\ \ \ \ \ \ \ \ \ \ \ \ Objekt\ identifiziert\ werden.\r\n\ \r\n
comment9.params=neuerText
comment9.target=void\ setzeAusgabetext(java.lang.String)
numComments=20
